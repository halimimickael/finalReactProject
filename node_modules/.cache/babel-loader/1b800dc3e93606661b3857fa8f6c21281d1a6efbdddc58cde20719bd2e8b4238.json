{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mickael HALIMI\\\\Desktop\\\\finalReactProject\\\\src\\\\context\\\\Context1.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext(null);\nexport default function ContextProvider({\n  children\n}) {\n  _s();\n  const [worker_ar, setWorkerAr] = useState([]);\n  const [worker_Favorites_ar, setWorkerFavoritesAr] = useState(() => {\n    const storedFavorites = localStorage.getItem(\"worker_Favorites_ar\");\n    return storedFavorites ? JSON.parse(storedFavorites) : [];\n  });\n  const [showEdit, setShowEdit] = useState(false);\n  const [currentStudentEdit, setCurrentEdit] = useState({});\n  const [seed, setSeed] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState('');\n  const {\n    query\n  } = useParams();\n  useEffect(() => {\n    const fetchWorkers = async () => {\n      try {\n        const response = await fetch(`https://randomuser.me/api/?results=50&seed=${seed === \"\" ? \"abc\" : seed}`);\n        const data = await response.json();\n        const workers = data.results.map(worker => ({\n          ...worker,\n          isFavorite: worker_Favorites_ar.some(fav => fav.id === worker.id)\n        }));\n        setWorkerAr(workers);\n        localStorage.setItem(\"worker_ar\", JSON.stringify(workers));\n        console.log(\"Data successfully recovered :\", workers);\n      } catch (error) {\n        console.error(\"Error retrieving data :\", error);\n      }\n    };\n    fetchWorkers();\n  }, [query, seed, worker_Favorites_ar]);\n  useEffect(() => {\n    localStorage.setItem(\"worker_Favorites_ar\", JSON.stringify(worker_Favorites_ar));\n  }, [worker_Favorites_ar]);\n  const addStudent = newItem => {\n    setWorkerAr([...worker_ar, newItem]);\n    localStorage.setItem(\"worker_ar\", JSON.stringify([...worker_ar, newItem]));\n  };\n  const resetList = () => {\n    if (window.confirm(\"Delete all?\")) {\n      setWorkerAr([]);\n      localStorage.setItem(\"worker_ar\", JSON.stringify([]));\n    }\n  };\n  const deleteStudent = _id => {\n    const filter_ar = worker_ar.filter(item => item.id !== _id);\n    setWorkerAr(filter_ar);\n    localStorage.setItem(\"worker_ar\", JSON.stringify(filter_ar));\n  };\n  const updatedStudent = (id, updatedStudent) => {\n    const updatedArray = worker_ar.map(student => student.id === id ? {\n      ...student,\n      ...updatedStudent\n    } : student);\n    setWorkerAr(updatedArray);\n    localStorage.setItem(\"worker_ar\", JSON.stringify(updatedArray));\n  };\n  const updateFavorites = newFavorites => {\n    setWorkerFavoritesAr(newFavorites);\n    const updatedWorkers = worker_ar.map(worker => ({\n      ...worker,\n      isFavorite: newFavorites.some(fav => fav.id === worker.id)\n    }));\n    setWorkerAr(updatedWorkers);\n    localStorage.setItem(\"worker_ar\", JSON.stringify(updatedWorkers));\n  };\n  const globalVal = {\n    setWorkerFavoritesAr: updateFavorites,\n    worker_Favorites_ar,\n    worker_ar,\n    addStudent,\n    resetList,\n    deleteStudent,\n    updatedStudent,\n    showEdit,\n    setShowEdit,\n    currentStudentEdit,\n    setCurrentEdit,\n    setSeed,\n    seed,\n    setSearchTerm,\n    searchTerm,\n    query\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: globalVal,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(ContextProvider, \"YLfGoWdWpnkKS1KlEnLMttyhddg=\", false, function () {\n  return [useParams];\n});\n_c = ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useParams","jsxDEV","_jsxDEV","AppContext","ContextProvider","children","_s","worker_ar","setWorkerAr","worker_Favorites_ar","setWorkerFavoritesAr","storedFavorites","localStorage","getItem","JSON","parse","showEdit","setShowEdit","currentStudentEdit","setCurrentEdit","seed","setSeed","searchTerm","setSearchTerm","query","fetchWorkers","response","fetch","data","json","workers","results","map","worker","isFavorite","some","fav","id","setItem","stringify","console","log","error","addStudent","newItem","resetList","window","confirm","deleteStudent","_id","filter_ar","filter","item","updatedStudent","updatedArray","student","updateFavorites","newFavorites","updatedWorkers","globalVal","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mickael HALIMI/Desktop/finalReactProject/src/context/Context1.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nexport default function ContextProvider({ children }) {\r\n  const [worker_ar, setWorkerAr] = useState([]);\r\n  const [worker_Favorites_ar, setWorkerFavoritesAr] = useState(() => {\r\n    const storedFavorites = localStorage.getItem(\"worker_Favorites_ar\");\r\n    return storedFavorites ? JSON.parse(storedFavorites) : [];\r\n  });\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [currentStudentEdit, setCurrentEdit] = useState({});\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const { query } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchWorkers = async () => {\r\n      try {\r\n        const response = await fetch(`https://randomuser.me/api/?results=50&seed=${seed === \"\" ? \"abc\" : seed}`);\r\n        const data = await response.json();\r\n        const workers = data.results.map(worker => ({\r\n          ...worker,\r\n          isFavorite: worker_Favorites_ar.some(fav => fav.id === worker.id)\r\n        }));\r\n        setWorkerAr(workers);\r\n        localStorage.setItem(\"worker_ar\", JSON.stringify(workers));\r\n        console.log(\"Data successfully recovered :\", workers);\r\n      } catch (error) {\r\n        console.error(\"Error retrieving data :\", error);\r\n      }\r\n    };\r\n\r\n    fetchWorkers();\r\n  }, [query, seed, worker_Favorites_ar]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"worker_Favorites_ar\", JSON.stringify(worker_Favorites_ar));\r\n  }, [worker_Favorites_ar]);\r\n\r\n  const addStudent = (newItem) => {\r\n    setWorkerAr([...worker_ar, newItem]);\r\n    localStorage.setItem(\"worker_ar\", JSON.stringify([...worker_ar, newItem]));\r\n  };\r\n\r\n  const resetList = () => {\r\n    if (window.confirm(\"Delete all?\")) {\r\n      setWorkerAr([]);\r\n      localStorage.setItem(\"worker_ar\", JSON.stringify([]));\r\n    }\r\n  };\r\n\r\n  const deleteStudent = (_id) => {\r\n    const filter_ar = worker_ar.filter((item) => item.id !== _id);\r\n    setWorkerAr(filter_ar);\r\n    localStorage.setItem(\"worker_ar\", JSON.stringify(filter_ar));\r\n  };\r\n\r\n  const updatedStudent = (id, updatedStudent) => {\r\n    const updatedArray = worker_ar.map((student) =>\r\n      student.id === id ? { ...student, ...updatedStudent } : student\r\n    );\r\n    setWorkerAr(updatedArray);\r\n    localStorage.setItem(\"worker_ar\", JSON.stringify(updatedArray));\r\n  };\r\n\r\n  const updateFavorites = (newFavorites) => {\r\n    setWorkerFavoritesAr(newFavorites);\r\n    const updatedWorkers = worker_ar.map(worker => ({\r\n      ...worker,\r\n      isFavorite: newFavorites.some(fav => fav.id === worker.id)\r\n    }));\r\n    setWorkerAr(updatedWorkers);\r\n    localStorage.setItem(\"worker_ar\", JSON.stringify(updatedWorkers));\r\n  };\r\n\r\n  const globalVal = {\r\n    setWorkerFavoritesAr: updateFavorites,\r\n    worker_Favorites_ar,\r\n    worker_ar,\r\n    addStudent,\r\n    resetList,\r\n    deleteStudent,\r\n    updatedStudent,\r\n    showEdit,\r\n    setShowEdit,\r\n    currentStudentEdit,\r\n    setCurrentEdit,\r\n    setSeed,\r\n    seed,\r\n    setSearchTerm,\r\n    searchTerm,\r\n    query,\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={globalVal}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}